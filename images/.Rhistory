library(haven); library(R2jags); library(MCMCpack); library(reshape); library(reshape2)
library(plyr); library(dplyr); library(ggplot2); library(runjags)
library(lme4); library(arm); library(broom); library(gridExtra)
library(stargazer);  library(lfe); library(plm); library(AER)
library(simcf); library(readr)
df <- read_csv("~/GitHub/Danish_muni/data/CityPolicy_25092018.csv")
pan.dat <- pdata.frame(df, index = c("muni", "year")) # reformat data as panel
# remove missings
helper <- lm(lag_socdem1 ~ correctsocdem + bluevote + log_pop + muni +
year, data=pan.dat)
used <- extractdata(helper, pan.dat, na.rm=T)
year.slope <- lmer(lag_socdem1 ~ correctsocdem + bluevote + log_pop +
(1 + bluevote| year) +
factor(year) + factor(muni), data = used)
boot_year <- bootMer(year.slope, FUN = function(x) coef(x)$year[,3],
nsim = 100, .progress="txt")
#extract and plot results
year.fx <- data.frame(year = rownames(as.data.frame(coef(year.slope)$year)),
summary(boot_year)[4:5])
year.fx$year <- as.numeric(as.character(year.fx$year))#make sure year is numeric
ggplot(year.fx, aes(x = year, y = bootMed)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin=bootMed-(1.64*bootSE), ymax=bootMed+(1.64*bootSE)),
color = "grey", alpha = .2) +
#geom_ribbon(aes(ymin=lwr90, ymax=upr90), color = "grey", alpha = .3) +
theme_classic() +
geom_hline(yintercept = 0, lty = 3) +
geom_hline(yintercept = coef(fe.mod)[1], lty = 2) +
annotate(geom = "text", x = 1984, y = 0.14,
label = "Baseline Estimate", size = 3.5) +
labs(x = NULL, y = "Simulated Median Coefficient\n(Random slope by year)",
title = "B: Varying Effects Over Time") +
scale_x_continuous(breaks = as.vector(year.fx$year))
#full measure
fe.mod <- plm(lag_socdem1 ~ bluevote + log_pop + factor(year), data = pan.dat ,
model = "within", effects = "individual")
ggplot(year.fx, aes(x = year, y = bootMed)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin=bootMed-(1.64*bootSE), ymax=bootMed+(1.64*bootSE)),
color = "grey", alpha = .2) +
#geom_ribbon(aes(ymin=lwr90, ymax=upr90), color = "grey", alpha = .3) +
theme_classic() +
geom_hline(yintercept = 0, lty = 3) +
geom_hline(yintercept = coef(fe.mod)[1], lty = 2) +
annotate(geom = "text", x = 1984, y = 0.14,
label = "Baseline Estimate", size = 3.5) +
labs(x = NULL, y = "Simulated Median Coefficient\n(Random slope by year)",
title = "B: Varying Effects Over Time") +
scale_x_continuous(breaks = as.vector(year.fx$year))
h2<-ggplot(year.fx, aes(x = year, y = bootMed)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin=bootMed-(1.64*bootSE), ymax=bootMed+(1.64*bootSE)),
color = "grey", alpha = .2) +
#geom_ribbon(aes(ymin=lwr90, ymax=upr90), color = "grey", alpha = .3) +
theme_classic() +
geom_hline(yintercept = 0, lty = 3) +
geom_hline(yintercept = coef(fe.mod)[1], lty = 2) +
annotate(geom = "text", x = 1984, y = 0.14,
label = "Baseline Estimate", size = 3.5) +
labs(x = NULL, y = "Simulated Median Coefficient\n(Random slope by year)",
title = "B: Varying Effects Over Time") +
scale_x_continuous(breaks = as.vector(year.fx$year))
h2
setwd("~/GitHub/Danish_muni/images")
ggsave(h2, filename="StabilityOfEffects.eps",
device = cairo_ps,
width = 8.56,
heigh = 6.5)
h2<-ggplot(year.fx, aes(x = year, y = bootMed)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin=bootMed-(1.64*bootSE), ymax=bootMed+(1.64*bootSE)),
color = "grey", alpha = .2) +
#geom_ribbon(aes(ymin=lwr90, ymax=upr90), color = "grey", alpha = .3) +
theme_classic() +
geom_hline(yintercept = 0, lty = 3) +
geom_hline(yintercept = coef(fe.mod)[1], lty = 2) +
annotate(geom = "text", x = 1984, y = 0.14,
label = "Baseline Estimate", size = 3.5) +
labs(x = NULL, y = "Simulated Median Coefficient\n(Random slope by year)",
title = NULL) +
scale_x_continuous(breaks = as.vector(year.fx$year))
setwd("~/GitHub/Danish_muni/images")
ggsave(h2, filename="StabilityOfEffects.eps",
device = cairo_ps,
width = 8.56,
heigh = 6.5)
View(df)
desc_df <- df[,c(13,19,24:30,32:35,39)]
stargazer(desc_df)
desc_df <- as.data.frame(df[,c(13,19,24:30,32:35,39)])
stargazer(desc_df)
stargazer(desc_df,
summary.stat = c("n", "mean", "sd", "min", "max"))
stargazer(desc_df,
summary.stat = c("n", "mean", "sd", "min", "max"),
covariate.labels = c("Income Tax", "Property Tax",
"Public Employees", "Day Care",
"Food Delivery", "Nursing Home",
"Relief Stay", "Private Services",
"Private Supplier", "Public Housing",
"Class Size", "Spending pr Pupil",
"Commercial Real Estate Tax",
"Spending per Capita"))
sqrt(i)
sqrt(1)
